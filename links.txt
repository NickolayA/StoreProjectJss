
https://storesc.dev.local//api/store/ui?sc_apikey={61FA884F-493D-40C3-BB76-F206837BDF8D}


https://storesc.dev.local//api/store/ui?sc_apikey=%7B61FA884F-493D-40C3-BB76-F206837BDF8D%7D&query=query%20%7B%20%20%0A%20%20search(rootItem%3A%20%22%7B802F170C-ADD3-41E7-9483-677FFEF97EBA%7D%22)%7B%0A%20%20%20%20results%20%7B%0A%20%20%20%20%20%20items%7B%0A%20%20%20%20%20%20%20item%20%7B%0A%20%20%20%20%20%20%20%20Title%3A%20field(name%3A%20%22Title%22)%7B%0A%09%09%09%09%09%09%09jss%0A%20%20%20%20%20%20%20%20%20%20%09%09%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20OfferDate%3A%20field(name%3A%20%22OfferDate%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%09jss%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20Image%3A%20field(name%3A%20%22Image%22)%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20jss%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D

https://localhost:8984/solr

https://www.linkedin.com/pulse/using-graphql-aspnet-core-headless-cms-sitecore-10-g%C3%B6ran-halvarsson?trk=read_related_article-card_title

https://storesc.dev.local//sitecore/api/layout/render/jss?item=%2Fproducts&sc_lang=en&sc_apikey=%7B61FA884F-493D-40C3-BB76-F206837BDF8D%7D

https://storesc.dev.local//sitecore/api/layout/render/jss?item=%7B06EC8232-8F27-4634-AD39-A44EBAE1EF08%7D&sc_apikey=%7B61FA884F-493D-40C3-BB76-F206837BDF8D%7D

https://storesc.dev.local//sitecore/api/jss/dictionary/store/en?sc_apikey={61FA884F-493D-40C3-BB76-F206837BDF8D}


jss deploy app --acceptCertificate 60:B4:EA:7C:A0:0F:EE:7E:C1:3C:04:E8:3E:37:7D:07:A7:32:22:F1

Store Project

Site should be available in 2 languages
	2 similar sites should be under 1 tenant 
	Dictionary service should be used for Labels/Buttons
	All page redirects should be without reloading page (SPA)
	Site should be mobile responsive 
	Custom Root and Dynamic placeholders
	Client Framework - React JS (+ Typescript)
	Use Unicorn (or Sitecore Content Serialization in case of Sitecore 10) for content serialization.
	Use JSS CLI to scaffold project 
	Project structure:

	- Home [all data like: components, fields &etc. should fully support EE. Page should be available in disconnected and connected modes]
	
		Hero Banner (image [srcset should be used for different screen sizes], text)
		Top products - Title, Description(Multiline text), ListOfProducts (Multilist)
			Each product should contain (Image, title, short description (Multiline text), offer date, quantity)	
		Useful links - TODO

	- Products [Not supported in EE, use GraphQL to get data for this page, connected mode only]
		
		Intro (Title, Description) TODO add styles
		Products [Use data from search index retrieved via GraphQL]
				
			Each product should contain (Image, title, offer date)
		
	- Product overview [all data like components, fields &etc. should fully support EE. Connected mode only]
	
		Image  [srcset should be used for different screen sizes]
		Title
		Description (rich text)
		Offer date
		Quantity




http://www.stockpick.nl/english/scaling-sitecore-jss-images/



		Сайткор предложил такой салюшен. Можешь, проверить, пофиксит ли это нашу проблему
Hello Jesika,

Based on the provided information we would like to define the scope of the current case:

Issue definition: "MediaRequestProtection: An invalid/missing hash value was encountered" error when rendering images with changed parameters in code using JSS
Investigation target:


	
we will work diligently to help find the root cause and a resolution to the defined issue.


Additional notes:


	
if new circumstances are revealed during the course of the investigation, the scope can be changed based on the mutual agreement;
	overall investigation course will be aligned with Sitecore general Scope Of Support;
	questions that are not related to the investigation scope should be registered as separate cases.
	 


First of all, let me confirm your conclusion that this behavior is related to the fact that "-/media" prefix is replaced with "-/jssmedia" on the client side.


This prefix replacement is needed to trigger JSS specific media request handler and allow changing image size in the JS application.
If you intend to change image size in the code of the React application, the applied combination should be defined beforehand in "allowedMediaParams" config section.


However, there might also be some images that are not resized in the JS application and just use whichever size was provided by Layout Service.
In this case, scaling should be performed according to the values defined in the corresponding "Image" field and the provided hash value.


Thus, the current behavior has been registered as a bug in our bug tracking system.
Thank you for reporting the problem.

 

There are several possible workaround to this problem:

1. A custom component (sample below is for React):

import React from 'react';
import { Image } from '@sitecore-jss/sitecore-jss-react';

function StaticImage(props) {
var staticProps = props.field ? props.field : props.media
return staticProps.editable ? <Image {...props} /> : <img {...staticProps.value}/>
}

export default StaticImage;



The idea is to simply use <img .../> in normal mode (to prevent the replacement of the "-/media" prefix) and the JSS Image component in Experience Editor.


Then, this component can be used in your code instead of "Image" if no resizing is done in the React application, for example:

<StaticImage media={props.fields.sample1}/>

However, if you will need to modify an image size in the React app, please use the default "Image" component and "allowedMediaParams".

 

Another workaround is to use "-/jssmedia" prefix for all media links as described in the following blog post: https://chrisgentile.wordpress.com/2019/09/16/adding-support-for-media-request-protection-in-sitecore-jss/

This way the hash created for the image link will be valid.


If the suggested workarounds are not applicable for your use-case, please let me know.

To track the future status of this bug report, please use reference number 471229.